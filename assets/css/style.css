/* Create CSS variables at the root of the document to be used throughout the style sheet
*/
:root {
    --box-blue: #92cccd;
    --header-grey: #31343d;
    --page-background: #ededf6;
    --aside-font: #445876;
    color: var(--aside-font);

}

/* Looked up how to anchor the About Me, Contact Me...etc. I have to create an id (#) in each aside title. Match that name in the href " ".
I think i could have styled the nav-li differently. To explore
*/

header {
    background-color: var(--header-grey);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding-top: 50px;
    padding-bottom: 20px;
    font-size: 30px;
    color: var(--box-blue);
}


header .titleHeader {
    color: whitesmoke;
    padding-left: 1%;
}

/* text dec none to remove the line and colour after clicking */
nav ul li a {
    color: var(--box-blue);
    text-decoration: none;
}


.nav-li {
    font-size: 20px;
    float: right;
    list-style: none;
    display: inline;
    padding-right: 15px;
    color: var(--box-blue);
}

/*  LOOK UP BACKGROUND IMAGE
Used background image. background-position allows the pictured to fully express in the space. It is a game changer.
*/
.cool-subtitle {
    display: flex;
    color: var(--box-blue);
    justify-content: right;
    background-image: url("../images/img-header.jpg");
    background-position: center;
    font-size: 20px;
    padding-top: 20px;
    padding-right: 15px;
    padding-bottom: 15px;

}

/* body style starts here */

body {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    background-color: whitesmoke;
    color: #2d2d2d;
}

/* space evenly allows the whole container to arrange itself in relation to the parent */
.container {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    margin: 2%;
    padding: 2%;

}

/* this is my first column. the whole doc is two columns, one on the left, the aside bar, and the right, which is the contact.
Learned about rem - this helps the text be resopnsive to the page size. 
Padding is a game changer
*/
.sidebar {
    width: 15%;
    border-right: 5px solid var(--header-grey);
    text-align: right;
    font-size: 1.5rem;
    padding-right: 2%;
}

/* 2nd column */
.content {
    width: 77%;
    display: flex;
    justify-content: space-between;
}

#work-container {
    background-color: var(--box-blue);
    flex-wrap: wrap;
}
/* Watched a youtube video about VH. Also talked to tutor about it. This can be used better than px to set the height.
Still experimenting with the difference between justify content, align items, and text-align. */
.card {
    width: 48%;
    height: 35vh;
    display: flex;
    align-items: end;
    padding: 1%;
    margin: 1%;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    border: 2px solid black;
}

.main-card {
    width: 97%;
    background-image: url(../images/img-surfreport.jpg);
}

.project-title {
    background-color: var(--header-grey);
    color: var(--box-blue);
    font-size: 1.5rem;
    margin: 1%;
    padding: 1%;
    border-color: var(--box-blue);
    border: solid 2px;

}
/* Each needed a class because each has a different image */
.card1 {
    background-image: url(../images/img-calculator.jpg);

}

.card2 {
    background-image: url(../images/img-LED.jpg);

}

.card3 {
    background-image: url(../images/img-runbuddy.jpg);
}

.card4 {
    background-image: url(../images/jj.jpeg);

}

/* This was an interesting teaching from tutor. The way she calcualted 77% */
.content ol {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 77%;
    list-style: none;
}

.content a {
    text-decoration: none;
    color: #445876;
}
/* The align-items center moved everything really well
The margin allowed for spacing. Still not sure when exactly to apply align-items. */
footer {
    display: flex;
    flex-direction: column;
    align-items: center;

}

footer h1,
p {
    margin: 1%;
}

/* body style ends here */